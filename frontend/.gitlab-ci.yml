# В нашем Gitlab для сборки контейнеров воспользуемся Докером в Докере :)  
# https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#use-the-kubernetes-executor-with-docker-in-docker
# Для сборки образов с использованием Docker-in-Docker:
# добавить в код Downstream пайплайнов в секцию include подготовленный шаблон, содержащий необходимые настройки:
#  https://gitlab.praktikum-services.ru/templates/ci/-/blob/main/DockerInDockerTemplate.yml
# использовать в задачах сборки в качестве образа стабильную версию образа Docker:dind docker:20.10.12-dind-rootless
#
include:
  - template: Security/SAST.gitlab-ci.yml

stages:
  - build
  - test
  - publish
  - deploy

variables:
  VERSION: 1.0.${CI_PIPELINE_ID}

build-frontend:
  stage: build
  image: 
    name: node:18.19.0
  script:
    - cd frontend
    - npm install
    - cd .. && tar -zcvf frontend.tar.gz frontend
    - curl --fail --insecure -v -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --upload-file frontend.tar.gz https://artem-mihaylov.ru/repository/momo-store-frontend/${VERSION}/momo-store-frontend-${VERSION}.tar.gz
  artifacts:
    paths: 
      - frontend/node_modules
    when: on_success
    expire_in: "30 days"

build-image-frontend:
  stage: publish
  image: 
    name: gcr.io/kaniko-project/executor:v1.17.0-debug
    entrypoint: [""]
  script:
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --cache=true --cache-run-layers --cache-copy-layers --build-arg VERSION=$VERSION --context "${CI_PROJECT_DIR}/frontend" --dockerfile "${CI_PROJECT_DIR}/frontend/Dockerfile" --destination "$CI_REGISTRY_IMAGE/momo-store-frontend:$CI_COMMIT_SHA"
  needs:
    - build-frontend

deploy:
  image: $CI_REGISTRY_IMAGE:latest
  stage: deploy
  script: |
      cd frontend

      # helm package --version ${VERSION} frontend-chart
      # curl --insecure -u ${NEXUS_USERNAME}:${NEXUS_PASSWORD} $NEXUS_HELM_REPO --upload-file frontend-chart-${VERSION}.tgz

      # helm repo add --username ${NEXUS_USERNAME} --password ${NEXUS_PASSWORD} nexus $NEXUS_HELM_REPO
      # helm repo update

      helm upgrade \
      --kubeconfig ${KUBE_CONFIG} \
      --kube-ca-file ${KUBE_CERTIFICATE} \
      --debug \
      -n momo-store \
      --install \
      momo-store-frontend \
      frontend-chart \
      --set environment=prod \
      --set image.tag=${CI_COMMIT_SHA} \
      --atomic --timeout 15m \
      --create-namespace

      rm ${KUBE_CONFIG}